#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DACN2.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLDL")]
	public partial class MyDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTiet_KSan_Tour(ChiTiet_KSan_Tour instance);
    partial void UpdateChiTiet_KSan_Tour(ChiTiet_KSan_Tour instance);
    partial void DeleteChiTiet_KSan_Tour(ChiTiet_KSan_Tour instance);
    partial void InsertTour(Tour instance);
    partial void UpdateTour(Tour instance);
    partial void DeleteTour(Tour instance);
    partial void InsertChiTietDatTour(ChiTietDatTour instance);
    partial void UpdateChiTietDatTour(ChiTietDatTour instance);
    partial void DeleteChiTietDatTour(ChiTietDatTour instance);
    partial void InsertDatTour(DatTour instance);
    partial void UpdateDatTour(DatTour instance);
    partial void DeleteDatTour(DatTour instance);
    partial void InsertDiaDiem(DiaDiem instance);
    partial void UpdateDiaDiem(DiaDiem instance);
    partial void DeleteDiaDiem(DiaDiem instance);
    partial void InsertHuongDanVien(HuongDanVien instance);
    partial void UpdateHuongDanVien(HuongDanVien instance);
    partial void DeleteHuongDanVien(HuongDanVien instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertKSan(KSan instance);
    partial void UpdateKSan(KSan instance);
    partial void DeleteKSan(KSan instance);
    partial void InsertLoaiTour(LoaiTour instance);
    partial void UpdateLoaiTour(LoaiTour instance);
    partial void DeleteLoaiTour(LoaiTour instance);
    partial void InsertMayBay(MayBay instance);
    partial void UpdateMayBay(MayBay instance);
    partial void DeleteMayBay(MayBay instance);
    partial void InsertPhanHoi(PhanHoi instance);
    partial void UpdatePhanHoi(PhanHoi instance);
    partial void DeletePhanHoi(PhanHoi instance);
    partial void InsertTaiKhoanAdmin(TaiKhoanAdmin instance);
    partial void UpdateTaiKhoanAdmin(TaiKhoanAdmin instance);
    partial void DeleteTaiKhoanAdmin(TaiKhoanAdmin instance);
    partial void InsertTinTuc(TinTuc instance);
    partial void UpdateTinTuc(TinTuc instance);
    partial void DeleteTinTuc(TinTuc instance);
    #endregion
		
		public MyDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLDLConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTiet_KSan_Tour> ChiTiet_KSan_Tours
		{
			get
			{
				return this.GetTable<ChiTiet_KSan_Tour>();
			}
		}
		
		public System.Data.Linq.Table<Tour> Tours
		{
			get
			{
				return this.GetTable<Tour>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDatTour> ChiTietDatTours
		{
			get
			{
				return this.GetTable<ChiTietDatTour>();
			}
		}
		
		public System.Data.Linq.Table<DatTour> DatTours
		{
			get
			{
				return this.GetTable<DatTour>();
			}
		}
		
		public System.Data.Linq.Table<DiaDiem> DiaDiems
		{
			get
			{
				return this.GetTable<DiaDiem>();
			}
		}
		
		public System.Data.Linq.Table<HuongDanVien> HuongDanViens
		{
			get
			{
				return this.GetTable<HuongDanVien>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<KSan> KSans
		{
			get
			{
				return this.GetTable<KSan>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTour> LoaiTours
		{
			get
			{
				return this.GetTable<LoaiTour>();
			}
		}
		
		public System.Data.Linq.Table<MayBay> MayBays
		{
			get
			{
				return this.GetTable<MayBay>();
			}
		}
		
		public System.Data.Linq.Table<PhanHoi> PhanHois
		{
			get
			{
				return this.GetTable<PhanHoi>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoanAdmin> TaiKhoanAdmins
		{
			get
			{
				return this.GetTable<TaiKhoanAdmin>();
			}
		}
		
		public System.Data.Linq.Table<TinTuc> TinTucs
		{
			get
			{
				return this.GetTable<TinTuc>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTiet_KSan_Tour")]
	public partial class ChiTiet_KSan_Tour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKS;
		
		private System.Nullable<int> _MaTour;
		
		private int _ID;
		
		private EntityRef<KSan> _KSan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKSChanging(int value);
    partial void OnMaKSChanged();
    partial void OnMaTourChanging(System.Nullable<int> value);
    partial void OnMaTourChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public ChiTiet_KSan_Tour()
		{
			this._KSan = default(EntityRef<KSan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKS", DbType="Int NOT NULL")]
		public int MaKS
		{
			get
			{
				return this._MaKS;
			}
			set
			{
				if ((this._MaKS != value))
				{
					if (this._KSan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKSChanging(value);
					this.SendPropertyChanging();
					this._MaKS = value;
					this.SendPropertyChanged("MaKS");
					this.OnMaKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTour", DbType="Int")]
		public System.Nullable<int> MaTour
		{
			get
			{
				return this._MaTour;
			}
			set
			{
				if ((this._MaTour != value))
				{
					this.OnMaTourChanging(value);
					this.SendPropertyChanging();
					this._MaTour = value;
					this.SendPropertyChanged("MaTour");
					this.OnMaTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KSan_ChiTiet_KSan_Tour", Storage="_KSan", ThisKey="MaKS", OtherKey="MaKS", IsForeignKey=true)]
		public KSan KSan
		{
			get
			{
				return this._KSan.Entity;
			}
			set
			{
				KSan previousValue = this._KSan.Entity;
				if (((previousValue != value) 
							|| (this._KSan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KSan.Entity = null;
						previousValue.ChiTiet_KSan_Tours.Remove(this);
					}
					this._KSan.Entity = value;
					if ((value != null))
					{
						value.ChiTiet_KSan_Tours.Add(this);
						this._MaKS = value.MaKS;
					}
					else
					{
						this._MaKS = default(int);
					}
					this.SendPropertyChanged("KSan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tour")]
	public partial class Tour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenTour;
		
		private System.Nullable<int> _Gia;
		
		private System.Nullable<System.DateTime> _NgayKhoiHanh;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
		private System.Nullable<int> _SoCho;
		
		private string _NoiDung;
		
		private string _ChiTietTour;
		
		private System.Nullable<int> _MaLoaiTour;
		
		private System.Nullable<int> _IDHDV;
		
		private System.Nullable<int> _MaDiaDiem;
		
		private System.Nullable<int> _MaKS;
		
		private System.Nullable<int> _MaMayBay;
		
		private string _MaTour;
		
		private string _Hinh;
		
		private EntitySet<DatTour> _DatTours;
		
		private EntityRef<DiaDiem> _DiaDiem;
		
		private EntityRef<HuongDanVien> _HuongDanVien;
		
		private EntityRef<KSan> _KSan;
		
		private EntityRef<LoaiTour> _LoaiTour;
		
		private EntityRef<MayBay> _MayBay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenTourChanging(string value);
    partial void OnTenTourChanged();
    partial void OnGiaChanging(System.Nullable<int> value);
    partial void OnGiaChanged();
    partial void OnNgayKhoiHanhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKhoiHanhChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    partial void OnSoChoChanging(System.Nullable<int> value);
    partial void OnSoChoChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnChiTietTourChanging(string value);
    partial void OnChiTietTourChanged();
    partial void OnMaLoaiTourChanging(System.Nullable<int> value);
    partial void OnMaLoaiTourChanged();
    partial void OnIDHDVChanging(System.Nullable<int> value);
    partial void OnIDHDVChanged();
    partial void OnMaDiaDiemChanging(System.Nullable<int> value);
    partial void OnMaDiaDiemChanged();
    partial void OnMaKSChanging(System.Nullable<int> value);
    partial void OnMaKSChanged();
    partial void OnMaMayBayChanging(System.Nullable<int> value);
    partial void OnMaMayBayChanged();
    partial void OnMaTourChanging(string value);
    partial void OnMaTourChanged();
    partial void OnHinhChanging(string value);
    partial void OnHinhChanged();
    #endregion
		
		public Tour()
		{
			this._DatTours = new EntitySet<DatTour>(new Action<DatTour>(this.attach_DatTours), new Action<DatTour>(this.detach_DatTours));
			this._DiaDiem = default(EntityRef<DiaDiem>);
			this._HuongDanVien = default(EntityRef<HuongDanVien>);
			this._KSan = default(EntityRef<KSan>);
			this._LoaiTour = default(EntityRef<LoaiTour>);
			this._MayBay = default(EntityRef<MayBay>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTour", DbType="NVarChar(25)")]
		public string TenTour
		{
			get
			{
				return this._TenTour;
			}
			set
			{
				if ((this._TenTour != value))
				{
					this.OnTenTourChanging(value);
					this.SendPropertyChanging();
					this._TenTour = value;
					this.SendPropertyChanged("TenTour");
					this.OnTenTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int")]
		public System.Nullable<int> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKhoiHanh", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKhoiHanh
		{
			get
			{
				return this._NgayKhoiHanh;
			}
			set
			{
				if ((this._NgayKhoiHanh != value))
				{
					this.OnNgayKhoiHanhChanging(value);
					this.SendPropertyChanging();
					this._NgayKhoiHanh = value;
					this.SendPropertyChanged("NgayKhoiHanh");
					this.OnNgayKhoiHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCho", DbType="Int")]
		public System.Nullable<int> SoCho
		{
			get
			{
				return this._SoCho;
			}
			set
			{
				if ((this._SoCho != value))
				{
					this.OnSoChoChanging(value);
					this.SendPropertyChanging();
					this._SoCho = value;
					this.SendPropertyChanged("SoCho");
					this.OnSoChoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(1000)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiTietTour", DbType="NVarChar(1000)")]
		public string ChiTietTour
		{
			get
			{
				return this._ChiTietTour;
			}
			set
			{
				if ((this._ChiTietTour != value))
				{
					this.OnChiTietTourChanging(value);
					this.SendPropertyChanging();
					this._ChiTietTour = value;
					this.SendPropertyChanged("ChiTietTour");
					this.OnChiTietTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiTour", DbType="Int")]
		public System.Nullable<int> MaLoaiTour
		{
			get
			{
				return this._MaLoaiTour;
			}
			set
			{
				if ((this._MaLoaiTour != value))
				{
					if (this._LoaiTour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiTourChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiTour = value;
					this.SendPropertyChanged("MaLoaiTour");
					this.OnMaLoaiTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHDV", DbType="Int")]
		public System.Nullable<int> IDHDV
		{
			get
			{
				return this._IDHDV;
			}
			set
			{
				if ((this._IDHDV != value))
				{
					if (this._HuongDanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHDVChanging(value);
					this.SendPropertyChanging();
					this._IDHDV = value;
					this.SendPropertyChanged("IDHDV");
					this.OnIDHDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDiaDiem", DbType="Int")]
		public System.Nullable<int> MaDiaDiem
		{
			get
			{
				return this._MaDiaDiem;
			}
			set
			{
				if ((this._MaDiaDiem != value))
				{
					if (this._DiaDiem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._MaDiaDiem = value;
					this.SendPropertyChanged("MaDiaDiem");
					this.OnMaDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKS", DbType="Int")]
		public System.Nullable<int> MaKS
		{
			get
			{
				return this._MaKS;
			}
			set
			{
				if ((this._MaKS != value))
				{
					if (this._KSan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKSChanging(value);
					this.SendPropertyChanging();
					this._MaKS = value;
					this.SendPropertyChanged("MaKS");
					this.OnMaKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMayBay", DbType="Int")]
		public System.Nullable<int> MaMayBay
		{
			get
			{
				return this._MaMayBay;
			}
			set
			{
				if ((this._MaMayBay != value))
				{
					if (this._MayBay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMayBayChanging(value);
					this.SendPropertyChanging();
					this._MaMayBay = value;
					this.SendPropertyChanged("MaMayBay");
					this.OnMaMayBayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTour", DbType="NChar(10)")]
		public string MaTour
		{
			get
			{
				return this._MaTour;
			}
			set
			{
				if ((this._MaTour != value))
				{
					this.OnMaTourChanging(value);
					this.SendPropertyChanging();
					this._MaTour = value;
					this.SendPropertyChanged("MaTour");
					this.OnMaTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh", DbType="VarChar(50)")]
		public string Hinh
		{
			get
			{
				return this._Hinh;
			}
			set
			{
				if ((this._Hinh != value))
				{
					this.OnHinhChanging(value);
					this.SendPropertyChanging();
					this._Hinh = value;
					this.SendPropertyChanged("Hinh");
					this.OnHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_DatTour", Storage="_DatTours", ThisKey="ID", OtherKey="MaTour")]
		public EntitySet<DatTour> DatTours
		{
			get
			{
				return this._DatTours;
			}
			set
			{
				this._DatTours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiaDiem_Tour", Storage="_DiaDiem", ThisKey="MaDiaDiem", OtherKey="MaDiaDiem", IsForeignKey=true)]
		public DiaDiem DiaDiem
		{
			get
			{
				return this._DiaDiem.Entity;
			}
			set
			{
				DiaDiem previousValue = this._DiaDiem.Entity;
				if (((previousValue != value) 
							|| (this._DiaDiem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiaDiem.Entity = null;
						previousValue.Tours.Remove(this);
					}
					this._DiaDiem.Entity = value;
					if ((value != null))
					{
						value.Tours.Add(this);
						this._MaDiaDiem = value.MaDiaDiem;
					}
					else
					{
						this._MaDiaDiem = default(Nullable<int>);
					}
					this.SendPropertyChanged("DiaDiem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HuongDanVien_Tour", Storage="_HuongDanVien", ThisKey="IDHDV", OtherKey="IDHDV", IsForeignKey=true)]
		public HuongDanVien HuongDanVien
		{
			get
			{
				return this._HuongDanVien.Entity;
			}
			set
			{
				HuongDanVien previousValue = this._HuongDanVien.Entity;
				if (((previousValue != value) 
							|| (this._HuongDanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HuongDanVien.Entity = null;
						previousValue.Tours.Remove(this);
					}
					this._HuongDanVien.Entity = value;
					if ((value != null))
					{
						value.Tours.Add(this);
						this._IDHDV = value.IDHDV;
					}
					else
					{
						this._IDHDV = default(Nullable<int>);
					}
					this.SendPropertyChanged("HuongDanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KSan_Tour", Storage="_KSan", ThisKey="MaKS", OtherKey="MaKS", IsForeignKey=true)]
		public KSan KSan
		{
			get
			{
				return this._KSan.Entity;
			}
			set
			{
				KSan previousValue = this._KSan.Entity;
				if (((previousValue != value) 
							|| (this._KSan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KSan.Entity = null;
						previousValue.Tours.Remove(this);
					}
					this._KSan.Entity = value;
					if ((value != null))
					{
						value.Tours.Add(this);
						this._MaKS = value.MaKS;
					}
					else
					{
						this._MaKS = default(Nullable<int>);
					}
					this.SendPropertyChanged("KSan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTour_Tour", Storage="_LoaiTour", ThisKey="MaLoaiTour", OtherKey="ID", IsForeignKey=true)]
		public LoaiTour LoaiTour
		{
			get
			{
				return this._LoaiTour.Entity;
			}
			set
			{
				LoaiTour previousValue = this._LoaiTour.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTour.Entity = null;
						previousValue.Tours.Remove(this);
					}
					this._LoaiTour.Entity = value;
					if ((value != null))
					{
						value.Tours.Add(this);
						this._MaLoaiTour = value.ID;
					}
					else
					{
						this._MaLoaiTour = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiTour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MayBay_Tour", Storage="_MayBay", ThisKey="MaMayBay", OtherKey="MaMayBay", IsForeignKey=true)]
		public MayBay MayBay
		{
			get
			{
				return this._MayBay.Entity;
			}
			set
			{
				MayBay previousValue = this._MayBay.Entity;
				if (((previousValue != value) 
							|| (this._MayBay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MayBay.Entity = null;
						previousValue.Tours.Remove(this);
					}
					this._MayBay.Entity = value;
					if ((value != null))
					{
						value.Tours.Add(this);
						this._MaMayBay = value.MaMayBay;
					}
					else
					{
						this._MaMayBay = default(Nullable<int>);
					}
					this.SendPropertyChanged("MayBay");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatTours(DatTour entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_DatTours(DatTour entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDatTour")]
	public partial class ChiTietDatTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MaKhachHang;
		
		private System.Nullable<int> _MaDatTour;
		
		private EntityRef<DatTour> _DatTour;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaKhachHangChanging(System.Nullable<int> value);
    partial void OnMaKhachHangChanged();
    partial void OnMaDatTourChanging(System.Nullable<int> value);
    partial void OnMaDatTourChanged();
    #endregion
		
		public ChiTietDatTour()
		{
			this._DatTour = default(EntityRef<DatTour>);
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="Int")]
		public System.Nullable<int> MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatTour", DbType="Int")]
		public System.Nullable<int> MaDatTour
		{
			get
			{
				return this._MaDatTour;
			}
			set
			{
				if ((this._MaDatTour != value))
				{
					if (this._DatTour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDatTourChanging(value);
					this.SendPropertyChanging();
					this._MaDatTour = value;
					this.SendPropertyChanged("MaDatTour");
					this.OnMaDatTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatTour_ChiTietDatTour", Storage="_DatTour", ThisKey="MaDatTour", OtherKey="MaDatTour", IsForeignKey=true)]
		public DatTour DatTour
		{
			get
			{
				return this._DatTour.Entity;
			}
			set
			{
				DatTour previousValue = this._DatTour.Entity;
				if (((previousValue != value) 
							|| (this._DatTour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatTour.Entity = null;
						previousValue.ChiTietDatTours.Remove(this);
					}
					this._DatTour.Entity = value;
					if ((value != null))
					{
						value.ChiTietDatTours.Add(this);
						this._MaDatTour = value.MaDatTour;
					}
					else
					{
						this._MaDatTour = default(Nullable<int>);
					}
					this.SendPropertyChanged("DatTour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_ChiTietDatTour", Storage="_KhachHang", ThisKey="MaKhachHang", OtherKey="MaKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.ChiTietDatTours.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDatTours.Add(this);
						this._MaKhachHang = value.MaKhachHang;
					}
					else
					{
						this._MaKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatTour")]
	public partial class DatTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDatTour;
		
		private System.Nullable<System.DateTime> _NgayDat;
		
		private System.Nullable<int> _SoCho;
		
		private System.Nullable<int> _ThanhTien;
		
		private System.Nullable<int> _MaTour;
		
		private EntitySet<ChiTietDatTour> _ChiTietDatTours;
		
		private EntityRef<Tour> _Tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDatTourChanging(int value);
    partial void OnMaDatTourChanged();
    partial void OnNgayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatChanged();
    partial void OnSoChoChanging(System.Nullable<int> value);
    partial void OnSoChoChanged();
    partial void OnThanhTienChanging(System.Nullable<int> value);
    partial void OnThanhTienChanged();
    partial void OnMaTourChanging(System.Nullable<int> value);
    partial void OnMaTourChanged();
    #endregion
		
		public DatTour()
		{
			this._ChiTietDatTours = new EntitySet<ChiTietDatTour>(new Action<ChiTietDatTour>(this.attach_ChiTietDatTours), new Action<ChiTietDatTour>(this.detach_ChiTietDatTours));
			this._Tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatTour", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDatTour
		{
			get
			{
				return this._MaDatTour;
			}
			set
			{
				if ((this._MaDatTour != value))
				{
					this.OnMaDatTourChanging(value);
					this.SendPropertyChanging();
					this._MaDatTour = value;
					this.SendPropertyChanged("MaDatTour");
					this.OnMaDatTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCho", DbType="Int")]
		public System.Nullable<int> SoCho
		{
			get
			{
				return this._SoCho;
			}
			set
			{
				if ((this._SoCho != value))
				{
					this.OnSoChoChanging(value);
					this.SendPropertyChanging();
					this._SoCho = value;
					this.SendPropertyChanged("SoCho");
					this.OnSoChoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int")]
		public System.Nullable<int> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTour", DbType="Int")]
		public System.Nullable<int> MaTour
		{
			get
			{
				return this._MaTour;
			}
			set
			{
				if ((this._MaTour != value))
				{
					if (this._Tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTourChanging(value);
					this.SendPropertyChanging();
					this._MaTour = value;
					this.SendPropertyChanged("MaTour");
					this.OnMaTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatTour_ChiTietDatTour", Storage="_ChiTietDatTours", ThisKey="MaDatTour", OtherKey="MaDatTour")]
		public EntitySet<ChiTietDatTour> ChiTietDatTours
		{
			get
			{
				return this._ChiTietDatTours;
			}
			set
			{
				this._ChiTietDatTours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_DatTour", Storage="_Tour", ThisKey="MaTour", OtherKey="ID", IsForeignKey=true)]
		public Tour Tour
		{
			get
			{
				return this._Tour.Entity;
			}
			set
			{
				Tour previousValue = this._Tour.Entity;
				if (((previousValue != value) 
							|| (this._Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour.Entity = null;
						previousValue.DatTours.Remove(this);
					}
					this._Tour.Entity = value;
					if ((value != null))
					{
						value.DatTours.Add(this);
						this._MaTour = value.ID;
					}
					else
					{
						this._MaTour = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDatTours(ChiTietDatTour entity)
		{
			this.SendPropertyChanging();
			entity.DatTour = this;
		}
		
		private void detach_ChiTietDatTours(ChiTietDatTour entity)
		{
			this.SendPropertyChanging();
			entity.DatTour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiaDiem")]
	public partial class DiaDiem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDiaDiem;
		
		private string _TenDiaDiem;
		
		private string _MoTa;
		
		private System.Nullable<int> _Mien;
		
		private EntitySet<Tour> _Tours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDiaDiemChanging(int value);
    partial void OnMaDiaDiemChanged();
    partial void OnTenDiaDiemChanging(string value);
    partial void OnTenDiaDiemChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnMienChanging(System.Nullable<int> value);
    partial void OnMienChanged();
    #endregion
		
		public DiaDiem()
		{
			this._Tours = new EntitySet<Tour>(new Action<Tour>(this.attach_Tours), new Action<Tour>(this.detach_Tours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDiaDiem", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDiaDiem
		{
			get
			{
				return this._MaDiaDiem;
			}
			set
			{
				if ((this._MaDiaDiem != value))
				{
					this.OnMaDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._MaDiaDiem = value;
					this.SendPropertyChanged("MaDiaDiem");
					this.OnMaDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDiaDiem", DbType="NVarChar(100)")]
		public string TenDiaDiem
		{
			get
			{
				return this._TenDiaDiem;
			}
			set
			{
				if ((this._TenDiaDiem != value))
				{
					this.OnTenDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._TenDiaDiem = value;
					this.SendPropertyChanged("TenDiaDiem");
					this.OnTenDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(200)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mien", DbType="Int")]
		public System.Nullable<int> Mien
		{
			get
			{
				return this._Mien;
			}
			set
			{
				if ((this._Mien != value))
				{
					this.OnMienChanging(value);
					this.SendPropertyChanging();
					this._Mien = value;
					this.SendPropertyChanged("Mien");
					this.OnMienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiaDiem_Tour", Storage="_Tours", ThisKey="MaDiaDiem", OtherKey="MaDiaDiem")]
		public EntitySet<Tour> Tours
		{
			get
			{
				return this._Tours;
			}
			set
			{
				this._Tours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.DiaDiem = this;
		}
		
		private void detach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.DiaDiem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HuongDanVien")]
	public partial class HuongDanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDHDV;
		
		private string _TenHDV;
		
		private string _NgaySinh;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private System.Nullable<System.DateTime> _NgayKhoiHanh;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
		private EntitySet<Tour> _Tours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHDVChanging(int value);
    partial void OnIDHDVChanged();
    partial void OnTenHDVChanging(string value);
    partial void OnTenHDVChanged();
    partial void OnNgaySinhChanging(string value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnNgayKhoiHanhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKhoiHanhChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    #endregion
		
		public HuongDanVien()
		{
			this._Tours = new EntitySet<Tour>(new Action<Tour>(this.attach_Tours), new Action<Tour>(this.detach_Tours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHDV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDHDV
		{
			get
			{
				return this._IDHDV;
			}
			set
			{
				if ((this._IDHDV != value))
				{
					this.OnIDHDVChanging(value);
					this.SendPropertyChanging();
					this._IDHDV = value;
					this.SendPropertyChanged("IDHDV");
					this.OnIDHDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHDV", DbType="NChar(10)")]
		public string TenHDV
		{
			get
			{
				return this._TenHDV;
			}
			set
			{
				if ((this._TenHDV != value))
				{
					this.OnTenHDVChanging(value);
					this.SendPropertyChanging();
					this._TenHDV = value;
					this.SendPropertyChanged("TenHDV");
					this.OnTenHDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="NChar(10)")]
		public string NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NChar(10)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NChar(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKhoiHanh", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKhoiHanh
		{
			get
			{
				return this._NgayKhoiHanh;
			}
			set
			{
				if ((this._NgayKhoiHanh != value))
				{
					this.OnNgayKhoiHanhChanging(value);
					this.SendPropertyChanging();
					this._NgayKhoiHanh = value;
					this.SendPropertyChanged("NgayKhoiHanh");
					this.OnNgayKhoiHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HuongDanVien_Tour", Storage="_Tours", ThisKey="IDHDV", OtherKey="IDHDV")]
		public EntitySet<Tour> Tours
		{
			get
			{
				return this._Tours;
			}
			set
			{
				this._Tours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.HuongDanVien = this;
		}
		
		private void detach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.HuongDanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKhachHang;
		
		private string _Ten;
		
		private System.Nullable<int> _SDT;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private string _DiaChi;
		
		private string _Email;
		
		private System.Nullable<bool> _GioiTinh;
		
		private EntitySet<ChiTietDatTour> _ChiTietDatTours;
		
		private EntitySet<PhanHoi> _PhanHois;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhachHangChanging(int value);
    partial void OnMaKhachHangChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnSDTChanging(System.Nullable<int> value);
    partial void OnSDTChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    #endregion
		
		public KhachHang()
		{
			this._ChiTietDatTours = new EntitySet<ChiTietDatTour>(new Action<ChiTietDatTour>(this.attach_ChiTietDatTours), new Action<ChiTietDatTour>(this.detach_ChiTietDatTours));
			this._PhanHois = new EntitySet<PhanHoi>(new Action<PhanHoi>(this.attach_PhanHois), new Action<PhanHoi>(this.detach_PhanHois));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int")]
		public System.Nullable<int> SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="VarChar(20)")]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(20)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_ChiTietDatTour", Storage="_ChiTietDatTours", ThisKey="MaKhachHang", OtherKey="MaKhachHang")]
		public EntitySet<ChiTietDatTour> ChiTietDatTours
		{
			get
			{
				return this._ChiTietDatTours;
			}
			set
			{
				this._ChiTietDatTours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhanHoi", Storage="_PhanHois", ThisKey="MaKhachHang", OtherKey="MaKhachHang")]
		public EntitySet<PhanHoi> PhanHois
		{
			get
			{
				return this._PhanHois;
			}
			set
			{
				this._PhanHois.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDatTours(ChiTietDatTour entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_ChiTietDatTours(ChiTietDatTour entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KSan")]
	public partial class KSan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenKhachSan;
		
		private int _MaKS;
		
		private string _Diachi;
		
		private EntitySet<ChiTiet_KSan_Tour> _ChiTiet_KSan_Tours;
		
		private EntitySet<Tour> _Tours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenKhachSanChanging(string value);
    partial void OnTenKhachSanChanged();
    partial void OnMaKSChanging(int value);
    partial void OnMaKSChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    #endregion
		
		public KSan()
		{
			this._ChiTiet_KSan_Tours = new EntitySet<ChiTiet_KSan_Tour>(new Action<ChiTiet_KSan_Tour>(this.attach_ChiTiet_KSan_Tours), new Action<ChiTiet_KSan_Tour>(this.detach_ChiTiet_KSan_Tours));
			this._Tours = new EntitySet<Tour>(new Action<Tour>(this.attach_Tours), new Action<Tour>(this.detach_Tours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhachSan", DbType="NChar(10)")]
		public string TenKhachSan
		{
			get
			{
				return this._TenKhachSan;
			}
			set
			{
				if ((this._TenKhachSan != value))
				{
					this.OnTenKhachSanChanging(value);
					this.SendPropertyChanging();
					this._TenKhachSan = value;
					this.SendPropertyChanged("TenKhachSan");
					this.OnTenKhachSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKS", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKS
		{
			get
			{
				return this._MaKS;
			}
			set
			{
				if ((this._MaKS != value))
				{
					this.OnMaKSChanging(value);
					this.SendPropertyChanging();
					this._MaKS = value;
					this.SendPropertyChanged("MaKS");
					this.OnMaKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="VarChar(100)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KSan_ChiTiet_KSan_Tour", Storage="_ChiTiet_KSan_Tours", ThisKey="MaKS", OtherKey="MaKS")]
		public EntitySet<ChiTiet_KSan_Tour> ChiTiet_KSan_Tours
		{
			get
			{
				return this._ChiTiet_KSan_Tours;
			}
			set
			{
				this._ChiTiet_KSan_Tours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KSan_Tour", Storage="_Tours", ThisKey="MaKS", OtherKey="MaKS")]
		public EntitySet<Tour> Tours
		{
			get
			{
				return this._Tours;
			}
			set
			{
				this._Tours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTiet_KSan_Tours(ChiTiet_KSan_Tour entity)
		{
			this.SendPropertyChanging();
			entity.KSan = this;
		}
		
		private void detach_ChiTiet_KSan_Tours(ChiTiet_KSan_Tour entity)
		{
			this.SendPropertyChanging();
			entity.KSan = null;
		}
		
		private void attach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.KSan = this;
		}
		
		private void detach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.KSan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiTour")]
	public partial class LoaiTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenLoaiTour;
		
		private string _Mota;
		
		private int _ID;
		
		private string _MaLoaiTour;
		
		private EntitySet<Tour> _Tours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenLoaiTourChanging(string value);
    partial void OnTenLoaiTourChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaLoaiTourChanging(string value);
    partial void OnMaLoaiTourChanged();
    #endregion
		
		public LoaiTour()
		{
			this._Tours = new EntitySet<Tour>(new Action<Tour>(this.attach_Tours), new Action<Tour>(this.detach_Tours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiTour", DbType="NVarChar(25)")]
		public string TenLoaiTour
		{
			get
			{
				return this._TenLoaiTour;
			}
			set
			{
				if ((this._TenLoaiTour != value))
				{
					this.OnTenLoaiTourChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiTour = value;
					this.SendPropertyChanged("TenLoaiTour");
					this.OnTenLoaiTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(1000)")]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiTour", DbType="NChar(10)")]
		public string MaLoaiTour
		{
			get
			{
				return this._MaLoaiTour;
			}
			set
			{
				if ((this._MaLoaiTour != value))
				{
					this.OnMaLoaiTourChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiTour = value;
					this.SendPropertyChanged("MaLoaiTour");
					this.OnMaLoaiTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTour_Tour", Storage="_Tours", ThisKey="ID", OtherKey="MaLoaiTour")]
		public EntitySet<Tour> Tours
		{
			get
			{
				return this._Tours;
			}
			set
			{
				this._Tours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTour = this;
		}
		
		private void detach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MayBay")]
	public partial class MayBay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaMayBay;
		
		private string _TenChuyenBay;
		
		private System.Nullable<System.DateTime> _GioDi;
		
		private System.Nullable<System.DateTime> _GIoDen;
		
		private EntitySet<Tour> _Tours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMayBayChanging(int value);
    partial void OnMaMayBayChanged();
    partial void OnTenChuyenBayChanging(string value);
    partial void OnTenChuyenBayChanged();
    partial void OnGioDiChanging(System.Nullable<System.DateTime> value);
    partial void OnGioDiChanged();
    partial void OnGIoDenChanging(System.Nullable<System.DateTime> value);
    partial void OnGIoDenChanged();
    #endregion
		
		public MayBay()
		{
			this._Tours = new EntitySet<Tour>(new Action<Tour>(this.attach_Tours), new Action<Tour>(this.detach_Tours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMayBay", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaMayBay
		{
			get
			{
				return this._MaMayBay;
			}
			set
			{
				if ((this._MaMayBay != value))
				{
					this.OnMaMayBayChanging(value);
					this.SendPropertyChanging();
					this._MaMayBay = value;
					this.SendPropertyChanged("MaMayBay");
					this.OnMaMayBayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChuyenBay", DbType="NChar(10)")]
		public string TenChuyenBay
		{
			get
			{
				return this._TenChuyenBay;
			}
			set
			{
				if ((this._TenChuyenBay != value))
				{
					this.OnTenChuyenBayChanging(value);
					this.SendPropertyChanging();
					this._TenChuyenBay = value;
					this.SendPropertyChanged("TenChuyenBay");
					this.OnTenChuyenBayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioDi", DbType="DateTime")]
		public System.Nullable<System.DateTime> GioDi
		{
			get
			{
				return this._GioDi;
			}
			set
			{
				if ((this._GioDi != value))
				{
					this.OnGioDiChanging(value);
					this.SendPropertyChanging();
					this._GioDi = value;
					this.SendPropertyChanged("GioDi");
					this.OnGioDiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIoDen", DbType="DateTime")]
		public System.Nullable<System.DateTime> GIoDen
		{
			get
			{
				return this._GIoDen;
			}
			set
			{
				if ((this._GIoDen != value))
				{
					this.OnGIoDenChanging(value);
					this.SendPropertyChanging();
					this._GIoDen = value;
					this.SendPropertyChanged("GIoDen");
					this.OnGIoDenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MayBay_Tour", Storage="_Tours", ThisKey="MaMayBay", OtherKey="MaMayBay")]
		public EntitySet<Tour> Tours
		{
			get
			{
				return this._Tours;
			}
			set
			{
				this._Tours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.MayBay = this;
		}
		
		private void detach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.MayBay = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanHoi")]
	public partial class PhanHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _MaKhachHang;
		
		private string _NoiDung;
		
		private int _MaPH;
		
		private System.Nullable<int> _MaTour;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhachHangChanging(System.Nullable<int> value);
    partial void OnMaKhachHangChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnMaPHChanging(int value);
    partial void OnMaPHChanged();
    partial void OnMaTourChanging(System.Nullable<int> value);
    partial void OnMaTourChanged();
    #endregion
		
		public PhanHoi()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="Int")]
		public System.Nullable<int> MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(100)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPH
		{
			get
			{
				return this._MaPH;
			}
			set
			{
				if ((this._MaPH != value))
				{
					this.OnMaPHChanging(value);
					this.SendPropertyChanging();
					this._MaPH = value;
					this.SendPropertyChanged("MaPH");
					this.OnMaPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTour", DbType="Int")]
		public System.Nullable<int> MaTour
		{
			get
			{
				return this._MaTour;
			}
			set
			{
				if ((this._MaTour != value))
				{
					this.OnMaTourChanging(value);
					this.SendPropertyChanging();
					this._MaTour = value;
					this.SendPropertyChanged("MaTour");
					this.OnMaTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhanHoi", Storage="_KhachHang", ThisKey="MaKhachHang", OtherKey="MaKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.PhanHois.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.PhanHois.Add(this);
						this._MaKhachHang = value.MaKhachHang;
					}
					else
					{
						this._MaKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoanAdmin")]
	public partial class TaiKhoanAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaTaiKhoanAdmin;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private System.Nullable<bool> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaTaiKhoanAdminChanging(string value);
    partial void OnMaTaiKhoanAdminChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public TaiKhoanAdmin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTaiKhoanAdmin", AutoSync=AutoSync.Always, DbType="VarChar(5)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaTaiKhoanAdmin
		{
			get
			{
				return this._MaTaiKhoanAdmin;
			}
			set
			{
				if ((this._MaTaiKhoanAdmin != value))
				{
					this.OnMaTaiKhoanAdminChanging(value);
					this.SendPropertyChanging();
					this._MaTaiKhoanAdmin = value;
					this.SendPropertyChanged("MaTaiKhoanAdmin");
					this.OnMaTaiKhoanAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(15)")]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(100)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TinTuc")]
	public partial class TinTuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTinTuc;
		
		private string _TieuDe;
		
		private System.Data.Linq.Binary _HinhAnh;
		
		private string _TomTat;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _NgayDang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTinTucChanging(int value);
    partial void OnIDTinTucChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnHinhAnhChanging(System.Data.Linq.Binary value);
    partial void OnHinhAnhChanged();
    partial void OnTomTatChanging(string value);
    partial void OnTomTatChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayDangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDangChanged();
    #endregion
		
		public TinTuc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTinTuc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDTinTuc
		{
			get
			{
				return this._IDTinTuc;
			}
			set
			{
				if ((this._IDTinTuc != value))
				{
					this.OnIDTinTucChanging(value);
					this.SendPropertyChanging();
					this._IDTinTuc = value;
					this.SendPropertyChanged("IDTinTuc");
					this.OnIDTinTucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(100)")]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TomTat", DbType="NVarChar(100)")]
		public string TomTat
		{
			get
			{
				return this._TomTat;
			}
			set
			{
				if ((this._TomTat != value))
				{
					this.OnTomTatChanging(value);
					this.SendPropertyChanging();
					this._TomTat = value;
					this.SendPropertyChanged("TomTat");
					this.OnTomTatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(100)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDang", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDang
		{
			get
			{
				return this._NgayDang;
			}
			set
			{
				if ((this._NgayDang != value))
				{
					this.OnNgayDangChanging(value);
					this.SendPropertyChanging();
					this._NgayDang = value;
					this.SendPropertyChanged("NgayDang");
					this.OnNgayDangChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
